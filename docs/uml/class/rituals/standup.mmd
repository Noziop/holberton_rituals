classDiagram
    %% StandUp Management System
    class StandUp {
        +id: UUID
        +date: DateTime
        +cohort_id: UUID
        +scrum_master_id: UUID
        +start_time: DateTime
        +end_time: DateTime
        +status: RitualStatus
        +max_duration_minutes: Integer
        +actual_duration_minutes: Integer
        +attendance_count: Integer
        +issues_count: Integer
        +next_scrum_master_id: UUID
        +weight_calculation_date: DateTime
        +created_at: DateTime
        +updated_at: DateTime
        +create() Boolean
        +update() Boolean
        +cancel() Boolean
        +start_session() SessionResult
        +end_session() SessionResult
        +record_attendance() AttendanceResult
        +calculate_next_scrum_master() UUID
        +validate_duration() ValidationResult
        +generate_summary_report() Report
        +trigger_notifications() NotificationResult
        +escalate_issues() List~EscalatedIssue~
        +reschedule(new_date: DateTime) Boolean
        +get_participation_stats() ParticipationStats
    }

    class StandUpIssue {
        +id: UUID
        +standup_id: UUID
        +reported_by_id: UUID
        +description: String
        +category: IssueCategory
        +priority: IssuePriority
        +status: IssueStatus
        +reported_at: DateTime
        +resolved_at: DateTime
        +resolution_description: String
        +assigned_to_id: UUID
        +needs_staff_attention: Boolean
        +created_at: DateTime
        +updated_at: DateTime
        +create() Boolean
        +update_status() Boolean
        +assign() AssignmentResult
        +resolve() ResolutionResult
        +escalate() EscalationResult
        +link_to_solution() Boolean
        +get_issue_history() List~IssueHistory~
        +add_comment(comment: String) Boolean
    }

    class RitualStatus {
        <<enumeration>>
        SCHEDULED
        IN_PROGRESS
        COMPLETED
        CANCELLED
        POSTPONED
        DELAYED
        EXTENDED
    }

    class IssueCategory {
        <<enumeration>>
        TECHNICAL
        CONCEPTUAL
        RESOURCE_ACCESS
        WORKFLOW
        COLLABORATION
        ENVIRONMENT
        DOCUMENTATION
        OTHER
    }

    class IssuePriority {
        <<enumeration>>
        LOW
        MEDIUM
        HIGH
        BLOCKING
        CRITICAL
    }

    class IssueStatus {
        <<enumeration>>
        REPORTED
        IN_DISCUSSION
        ASSIGNED
        IN_PROGRESS
        RESOLVED
        REOPENED
        NEEDS_FOLLOWUP
        BLOCKED
        DUPLICATE
    }

    class StandUpMetrics {
        +id: UUID
        +standup_id: UUID
        +participation_rate: Float
        +on_time_rate: Float
        +average_duration: Integer
        +issues_resolution_rate: Float
        +scrum_master_performance: Float
        +engagement_score: Float
        +recurring_issues: List~Issue~
        +created_at: DateTime
        +updated_at: DateTime
        +calculate_metrics() MetricsResult
        +generate_trend_analysis() TrendAnalysis
        +identify_patterns() List~Pattern~
        +flag_concerns() List~Concern~
        +export_report() Report
        +compare_with_previous() ComparisonResult
        +predict_trends() PredictionResult
    }

    class ScrumMasterRotation {
        +id: UUID
        +cohort_id: UUID
        +current_master_id: UUID
        +next_master_id: UUID
        +rotation_date: DateTime
        +performance_score: Float
        +created_at: DateTime
        +updated_at: DateTime
        +calculate_next_master() UUID
        +update_rotation() Boolean
        +get_rotation_history() List~RotationHistory~
        +evaluate_performance() PerformanceScore
    }

    StandUp "1" -- "1" RitualStatus : has status
    StandUp "1" -- "*" StandUpIssue : tracks
    StandUp "1" -- "1" StandUpMetrics : measures
    StandUp "1" -- "1" ScrumMasterRotation : manages
    StandUpIssue "1" -- "1" IssueCategory : categorizes
    StandUpIssue "1" -- "1" IssuePriority : prioritizes
    StandUpIssue "1" -- "1" IssueStatus : tracks status