classDiagram
    %% Global Analytics System
    class GlobalMetrics {
        +id: UUID
        +cohort_id: UUID
        +period_start: DateTime
        +period_end: DateTime
        +sod_completion_rate: Float
        +standup_effectiveness: Float
        +pld_engagement: Float
        +overall_participation: Float
        +warning_rate: Float
        +improvement_trends: List~Trend~
        +created_at: DateTime
        +updated_at: DateTime
        +calculate_global_metrics() Dict~Metric~
        +generate_trend_report() Report
        +identify_risk_factors() List~RiskFactor~
        +suggest_improvements() List~Improvement~
        +export_analytics() Report
        +predict_trends() List~Prediction~
        +compare_with_previous_period() Report
    }

    class WeightCalculator {
        +id: UUID
        +user_id: UUID
        +ritual_type: RitualType
        +base_weight: Float
        +participation_modifier: Float
        +performance_modifier: Float
        +warning_modifier: Float
        +last_participation_date: DateTime
        +consecutive_misses: Integer
        +history: List~WeightHistory~
        +calculate_current_weight() Float
        +apply_warning_penalty() Float
        +apply_performance_bonus() Float
        +reset_modifiers() Boolean
        +get_weight_history() List~WeightHistory~
        +predict_next_weight() Float
        +get_weight_factors() Dict~Factor~
    }

    class MetricSnapshot {
        +id: UUID
        +metric_type: MetricType
        +value: Float
        +timestamp: DateTime
        +context: Dict~MetricContext~
        +previous_value: Float
        +change_percentage: Float
        +capture_snapshot() Boolean
        +compare_with_previous() ComparisonResult
        +analyze_trend() TrendAnalysis
        +export_to_csv() String
    }

    class PerformanceIndicator {
        +id: UUID
        +indicator_type: IndicatorType
        +current_value: Float
        +target_value: Float
        +threshold_warning: Float
        +threshold_critical: Float
        +trend_direction: TrendDirection
        +last_updated: DateTime
        +evaluate_status() IndicatorStatus
        +calculate_gap() Float
        +suggest_actions() List~Action~
        +get_historical_values() List~HistoricalValue~
    }

    class CohortAnalytics {
        +id: UUID
        +cohort_id: UUID
        +time_period: TimePeriod
        +ritual_stats: Dict~RitualStat~
        +participation_trends: List~Trend~
        +engagement_levels: Dict~Engagement~
        +warning_patterns: List~Pattern~
        +created_at: DateTime
        +updated_at: DateTime
        +analyze_cohort_performance() PerformanceReport
        +identify_patterns() List~Pattern~
        +generate_recommendations() List~Recommendation~
        +export_report() Report
        +compare_with_other_cohorts() ComparisonReport
    }

    class MetricType {
        <<enumeration>>
        PARTICIPATION
        PERFORMANCE
        ENGAGEMENT
        WARNING
        IMPROVEMENT
        RETENTION
        SATISFACTION
    }

    class IndicatorType {
        <<enumeration>>
        ATTENDANCE
        QUALITY
        TIMELINESS
        ENGAGEMENT
        LEADERSHIP
        COLLABORATION
        IMPROVEMENT_RATE
    }

    class TimePeriod {
        <<enumeration>>
        DAILY
        WEEKLY
        BIWEEKLY
        MONTHLY
        QUARTERLY
        YEARLY
    }

    GlobalMetrics "1" -- "*" MetricSnapshot : captures
    GlobalMetrics "1" -- "*" PerformanceIndicator : monitors
    GlobalMetrics "1" -- "1" CohortAnalytics : analyzes
    MetricSnapshot "1" -- "1" MetricType : categorizes
    PerformanceIndicator "1" -- "1" IndicatorType : measures
    CohortAnalytics "1" -- "1" TimePeriod : spans